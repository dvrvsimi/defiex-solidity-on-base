import { CallExecutionState, DeploymentExecutionState, SendDataExecutionState, StaticCallExecutionState } from "./types/execution-state";
import { CallStrategyGenerator, DeploymentStrategyGenerator, ExecutionStrategy, LoadArtifactFunction, SendDataStrategyGenerator, StaticCallStrategyGenerator } from "./types/execution-strategy";
/**
 * The most basic execution strategy, which sends a single transaction
 * for each deployment, call, and send data, and a single static call
 * per static call execution.
 */
export declare class BasicExecutionStrategy implements ExecutionStrategy {
    private readonly _loadArtifact;
    readonly name: string;
    constructor(_loadArtifact: LoadArtifactFunction);
    executeDeployment(executionState: DeploymentExecutionState): DeploymentStrategyGenerator;
    executeCall(executionState: CallExecutionState): CallStrategyGenerator;
    executeSendData(executionState: SendDataExecutionState): SendDataStrategyGenerator;
    executeStaticCall(executionState: StaticCallExecutionState): StaticCallStrategyGenerator;
}
//# sourceMappingURL=basic-execution-strategy.d.ts.map